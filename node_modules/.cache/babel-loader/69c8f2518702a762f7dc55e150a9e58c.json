{"ast":null,"code":"var _jsxFileName = \"/home/pascal/Documents/Development/code/Phase-3/Phase-3-Project/online-journal-app/journalapp-client/src/components/CreateAccount.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\"; //import {useNavigate} from \"react-router-dom\";\n\nimport Alert from \"./Alert\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CreateAccount() {\n  _s();\n\n  const url = \"http://localhost:9292\"; //const history = useNavigate();\n\n  const [username, setUsername] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [recoveryQuestion, setRecoveryQuestion] = useState(\"\");\n  const [answer, setAnswer] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  function handleOnChange(event) {\n    if (event.target.name === \"username\") {\n      setUsername(event.target.value);\n    } else if (event.target.name === \"email\") {\n      setEmail(event.target.value);\n    } else if (event.target.name === \"recoveryQuestion\") {\n      setRecoveryQuestion(event.target.value);\n    } else if (event.target.name === \"recoveryQuestionAnswer\") {\n      setAnswer(event.target.value);\n    } else {\n      setPassword(event.target.value);\n    }\n  }\n\n  function handleCreateAccountAlert() {\n    let responseData = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    if (Object.values(responseData)[0] === \"User already Exists\") {\n      /*#__PURE__*/\n      _jsxDEV(Alert, {\n        type: \"error\",\n        message: \"User email already exists, please Login!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }, this);\n\n      alert(\"User email already exists, please Login!\");\n    } else {\n      /*#__PURE__*/\n      _jsxDEV(Alert, {\n        type: \"success\",\n        message: \"Account Created successfully\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this);\n    }\n  }\n\n  function handleCreateAccount(event) {\n    event.preventDefault();\n    const newUser = {\n      username: username,\n      email: email,\n      recovery_question: recoveryQuestion.toLowerCase(),\n      answer: answer.toLowerCase(),\n      password: password\n    };\n    fetch(`${url}/create-account`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(newUser)\n    }).then(response => response.json()).then(responseData => handleCreateAccountAlert(responseData));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"CREATE ACCOUNT\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form\",\n      onSubmit: handleCreateAccount,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"username\",\n        placeholder: \"Username\",\n        value: username,\n        onChange: handleOnChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        name: \"email\",\n        placeholder: \"Email\",\n        value: email,\n        onChange: handleOnChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"recoveryQuestion\",\n        placeholder: \"Recovery Question\",\n        value: recoveryQuestion,\n        onChange: handleOnChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"recoveryQuestionAnswer\",\n        placeholder: \"Answer\",\n        value: answer,\n        onChange: handleOnChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        name: \"password\",\n        placeholder: \"Password\",\n        value: password,\n        onChange: handleOnChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CreateAccount, \"YYQc2yGQ89egTcbxqIPQz5q8eQs=\");\n\n_c = CreateAccount;\nexport default CreateAccount;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateAccount\");","map":{"version":3,"names":["React","useState","Alert","CreateAccount","url","username","setUsername","email","setEmail","recoveryQuestion","setRecoveryQuestion","answer","setAnswer","password","setPassword","handleOnChange","event","target","name","value","handleCreateAccountAlert","responseData","Object","values","alert","handleCreateAccount","preventDefault","newUser","recovery_question","toLowerCase","fetch","method","headers","body","JSON","stringify","then","response","json"],"sources":["/home/pascal/Documents/Development/code/Phase-3/Phase-3-Project/online-journal-app/journalapp-client/src/components/CreateAccount.js"],"sourcesContent":["import React, {useState} from \"react\";\n//import {useNavigate} from \"react-router-dom\";\nimport Alert from \"./Alert\";\n\nfunction CreateAccount(){\n    const url = \"http://localhost:9292\";\n    //const history = useNavigate();\n\n    const[username, setUsername] = useState(\"\");\n    const[email, setEmail] = useState(\"\");\n    const[recoveryQuestion, setRecoveryQuestion] = useState(\"\");\n    const[answer, setAnswer] = useState(\"\");\n    const[password, setPassword] = useState(\"\");\n\n    function handleOnChange(event){\n        if(event.target.name === \"username\"){\n            setUsername(event.target.value);\n        }\n        else if (event.target.name === \"email\"){\n            setEmail(event.target.value);\n        }\n        else if (event.target.name === \"recoveryQuestion\"){\n            setRecoveryQuestion(event.target.value);\n        }\n        else if (event.target.name === \"recoveryQuestionAnswer\"){\n            setAnswer(event.target.value);\n        }\n        else{\n            setPassword(event.target.value);\n        }  \n      }\n\n    function handleCreateAccountAlert(responseData = {}){\n        if(Object.values(responseData)[0] === \"User already Exists\"){\n            <Alert type=\"error\" message=\"User email already exists, please Login!\"/>\n            alert(\"User email already exists, please Login!\")\n            \n        }\n        else{\n            <Alert type=\"success\" message=\"Account Created successfully\"/>\n            \n        }\n    }\n\n    function handleCreateAccount(event){\n        event.preventDefault()\n        const newUser = {\n            username: username,\n            email: email,\n            recovery_question: recoveryQuestion.toLowerCase(),\n            answer: answer.toLowerCase(), \n            password: password\n        }\n        fetch(`${url}/create-account`, {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            }, \n            body: JSON.stringify(newUser)\n        })\n        .then(response => response.json())\n        .then(responseData => handleCreateAccountAlert(responseData));\n    }\n    return (\n        <div>\n            <h1>CREATE ACCOUNT</h1>\n            <form className=\"form\" onSubmit={handleCreateAccount}>\n                <input type={\"text\"} name=\"username\" placeholder=\"Username\" value={username} onChange={handleOnChange}/>\n                <input type={\"email\"} name=\"email\" placeholder=\"Email\" value={email} onChange={handleOnChange}/>\n                <input type={\"text\"} name=\"recoveryQuestion\" placeholder=\"Recovery Question\" value={recoveryQuestion} onChange={handleOnChange}/>\n                <input type={\"text\"} name=\"recoveryQuestionAnswer\" placeholder=\"Answer\" value={answer} onChange={handleOnChange}/>\n                <input type={\"password\"} name=\"password\" placeholder=\"Password\" value={password} onChange={handleOnChange}/>\n                <button type=\"submit\">Submit</button> \n            </form>\n        </div>\n    );\n}\n\nexport default CreateAccount;"],"mappings":"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"},"metadata":{},"sourceType":"module"}